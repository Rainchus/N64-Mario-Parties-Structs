typedef struct {
/* 0x00 */ char unk_00; //unused?
/* 0x01 */ u8 cpu_difficulty;
/* 0x02 */ u8 cpu_difficulty2; //copied from 0x01 for some reason..?
/* 0x03 */ u8 controller_port;
/* 0x04 */ u8 characterID;
/* 0x05 */ char padding_05;
/* 0x06 */ s16 flags;
/* 0x08 */ s16 coins;
/* 0x0A */ s16 extra_coins_collected_during_minigame;
/* 0x0C */ s16 minigameCoinsWon; //coins won on current minigame, also stores battle placement briefly
/* 0x0E */ s16 stars;
/* 0x10 */ s16 cur_chain_index;
/* 0x12 */ s16 cur_space_index;
/* 0x14 */ s16 next_chain_index;
/* 0x16 */ s16 next_space_index;
/* 0x18 */ char unk_18;
/* 0x19 */ s8 item;
/* 0x1A */ s8 turn_status;
/* 0x1B */ s8 player_space_color; (color for minigame dividing)
/* 0x1C */ char unk_1C[0x0C];
/* 0x28 */ s16 minigame_coins_collected;
/* 0x2A */ s16 coinPeak; //used for coin star
/* 0x2C */ u8 happening_spaces_landed_on;
/* 0x2D */ u8 red_spaces_landed_on;
/* 0x2E */ u8 blue_spaces_landed_on;
/* 0x2F */ u8 chance_spaces_landed_on;
/* 0x30 */ u8 bowser_spaces_landed_on;
/* 0x31 */ u8 battle_spaces_landed_on;
/* 0x32 */ u8 item_spaces_landed_on;
/* 0x33 */ u8 bank_spaces_landed_on;
} playerMain; //sizeof 0x34
//P1 - 800FD2C0
//P2 - 800FD2F4
//P3 - 800FD328
//P4 - 800FD35C

typedef struct {
/* 0x00 */ char unk_00[2];
/* 0x02 */ char setPlayerRoll;
/* 0x03 */ char unk_03[2];
/* 0x05 */ char diceRoll1;
/* 0x06 */ char diceRoll2;
/* 0x07 */ char diceRoll3;
/* 0x08 */ char curDiceCount;
/* 0x09 */ char unk_09[0x43];
} playerDice; //sizeof 0x4C
//P1 - 800DF4C0
//P2 - 800DF50C
//P3 - 800DF558
//P4 - 800DF5A4

typedef struct {
/* 0x00 */ unk_00[0x10]
/* 0x10 */ float xPos;
/* 0x14 */ float yPos;
/* 0x18 */ float zPos;
/* 0x44 */ s16 playerPlacement;
} playerPortraitData; //sizeof 0x48

enum Item {
/* 0x00 */ Item_Mushroom;
/* 0x01 */ Item_Skeleton Key;
/* 0x02 */ Item_Plunder Chest;
/* 0x03 */ Item_Bowser Bomb;
/* 0x04 */ Item_Dueling_Glove;
/* 0x05 */ Item_Warp_Block;
/* 0x06 */ Item_Golden_Mushroom;
/* 0x07 */ Item_Boo_Bell;
/* 0x08 */ Item_Bowser_Suit;
/* 0x09 */ Item_Magic_Lamp;
};
