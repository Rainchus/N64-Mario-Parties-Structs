typedef struct playerMain {
/* 0x00 */ char unk_00;
/* 0x01 */ u8 cpuDifficulty;
/* 0x02 */ u8 cpuDifficultyCopy;
/* 0x03 */ u8 flags; //including CPU flag
/* 0x04 */ u8 characterID;
/* 0x05 */ char unk_05[3];
/* 0x08 */ u16 coinAmount;
/* 0x0A */ s16 miniGameCoins; //coins to give to player after minigame
/* 0x0C */ u16 starAmount;
/* 0x0E */ u16 curChainIndex;
/* 0x10 */ u16 curSpaceIndex;
/* 0x12 */ u16 nextChainIndex;
/* 0x14 */ u16 nextSpaceIndex;
/* 0x16 */ u8 poisonedFlag;
/* 0x17 */ u8 turn_status; //space type player landed on
/* 0x18 */ u8 playerIndex; //0, 1, 2, or 3
/* 0x19 */ char unk_19[3]; //likely padding
/* 0x1C */ void* unk_1C; //some heap instance
/* 0x20 */ void* playerObj; //ptr to playerObj on heap
/* 0x24 */ u16 totalMinigameCoins;
/* 0x26 */ u16 totalCoins;
/* 0x28 */ u8 happeningSpacesTotal;
/* 0x29 */ u8 redSpacesTotal;
/* 0x2A */ u8 blueSpacesTotal;
/* 0x2B */ u8 minigameSpacesTotal;
/* 0x2C */ u8 chanceSpacesTotal;
/* 0x2D */ u8 mushroomSpacesTotal;
/* 0x2E */ u8 bowserSpacesTotal;
/* 0x2F */ char unk_2F;
} playerMain; //sizeof 0x30

typedef struct spaceData {
/* 0x00 */ s8 active; //is space invisible or visible?
/* 0x01 */ u8 type; //blue space, red space, etc.
/* 0x02 */ char unk_02[2];
/* 0x04 */ f32 xPos;
/* 0x08 */ f32 yPos;
/* 0x0C */ f32 zPos;
/* 0x10 */ f32 width;
/* 0x14 */ f32 depth;
/* 0x18 */ f32 height;
/* 0x1C */ void* unk_1C;
} spaceData; //sizeof 0x20

enum spaces {
	NONE,
	BLUE_SPACE,
	RED_SPACE,
	MINIGAME_SPACE,
	HAPPENING_SPACE,
	STAR_SPACE,
	CHANCE_SPACE,
	UNK07_SPACE,
	MUSHROOM_SPACE,
	BOWSER_SPACE,
}